workflows:
  ios-automatic-code-signing:
    name: iOS automatic code signing
    instance_type: mac_mini_m2
    working_directory: ios/ios-automatic-code-signing-demo-project
    environment:
      groups:
        - ios
        # - ios_creds # <-- (group contains variables: APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY, CERTIFICATE_PRIVATE_KEY)
      vars:
        XCODE_WORKSPACE: "swiftly.xcworkspace"
        XCODE_SCHEME: "swiftly"
        BUNDLE_ID: "io.codemagic.cmswiftly"
        APP_STORE_APP_ID: "1570610860"
      # xcode: 14.3
      cocoapods: default
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: "develop"
          include: true
          source: true
    scripts:
      - name: Install pods
        script: |
          pod install
      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
          keychain initialize
      - name: Fetch signing files
        script: |
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
      - name: Use system default keychain
        script: |
          keychain add-certificates
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Increment build number
        script: |
          agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 4))
      - name: Build ipa for distribution
        working_directory: ios/ios-automatic-code-signing-demo-project
        script: |
          xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
    artifacts:
      - build/ios/ipa/*.ipa
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
      email:
        recipients:
          - user1@example.com
        notify:
          success: true
          failure: true
      slack:
        channel: "#ce-builds"
        notify_on_build_start: true
        notify:
          success: false
          failure: false

  ios-manual-code-signing:
    name: iOS manual code signing
    instance_type: mac_mini_m2
    working_directory: ios/ios-manual-code-signing-demo-project
    environment:
      groups:
        - ios_manual_signing
        - ios_creds
      vars:
        XCODE_WORKSPACE: "swiftly.xcworkspace"
        XCODE_SCHEME: "swiftly"
        APP_STORE_APP_ID: "1571469558"
      xcode: latest
      cocoapods: default
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: "develop"
          include: true
          source: true
    scripts:
      - name: Install pods
        script: |
          pod install
      - name: Initialize keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
          keychain initialize
      - name: set up provisioning profiles
        script: |
          PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
          mkdir -p "$PROFILES_HOME"
          PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
          echo ${CM_PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
          echo "Saved provisioning profile $PROFILE_PATH"
      - name: Add signing certificate to keychain
        script: |
          echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
          keychain add-certificates --certificate /tmp/certificate.p12
      - name: Increment build number
        script: |
          agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Build .ipa
        script: |
          xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
    artifacts:
      - build/ios/ipa/*.ipa
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      email:
        recipients:
          - user1@example.com
        notify:
          success: true
          failure: true
      slack:
        channel: "#ce-builds"
        notify_on_build_start: true
        notify:
          success: false
          failure: false
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID

  ios-code-signing-identities:
    name: iOS code signing identities
    integrations:
      app_store_connect: NC_API_KEY
    instance_type: mac_mini_m2
    working_directory: ios/ios-code-signing-identities-demo-project
    environment:
      ios_signing:
        provisioning_profiles:
          - swiftly-profile
        certificates:
          - ios-distribution
      groups:
        - ios_creds
      vars:
        XCODE_WORKSPACE: "swiftly.xcworkspace"
        XCODE_SCHEME: "swiftly"
        APP_STORE_APP_ID: "1570610860"
      xcode: latest
      cocoapods: default
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: "develop"
          include: true
          source: true
    scripts:
      - name: Install pods
        script: |
          pod install
      - name: Increment build number
        script: |
          agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Build .ipa
        script: |
          xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
    artifacts:
      - build/ios/ipa/*.ipa
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      email:
        recipients:
          - user1@example.com
        notify:
          success: true
          failure: true
      slack:
        channel: "#ce-builds"
        notify_on_build_start: true
        notify:
          success: false
          failure: false
      app_store_connect:
        auth: integration

  ios-magic-actions:
    name: ios-magic-actions
    instance_type: mac_mini_m2
    working_directory: ios/ios-magic-actions-demo-project
    environment:
      groups:
        - ios_creds
      vars:
        XCODE_WORKSPACE: "swiftly.xcworkspace"
        XCODE_SCHEME: "swiftly"
        BUNDLE_ID: "io.codemagic.cmswiftly"
        APP_STORE_APP_ID: "1570610860"
      xcode: 14.3
      cocoapods: default
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: develop
          include: true
          source: true
    scripts:
      - name: Codemagic CLI Tools build
        script: |
          #!/bin/sh
          set -ex
          pip3 install codemagic-cli-tools
          keychain initialize
          pod init && pod install
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
          keychain add-certificates
          xcode-project use-profiles
          agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
          xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
    artifacts:
      - build/ios/ipa/*.ipa
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: false

  ios-fastlane:
    name: iOS Fastlane
    instance_type: mac_mini_m2
    working_directory: integrations/fastlane-integration-demo-project
    environment:
      groups:
        - ios_creds
        - fastlane_credentials
      xcode: 14.3
      cocoapods: default
    scripts:
      - bundle install
      - bundle exec fastlane beta

  flutter-yaml-ios:
    name: Flutter yaml iOS
    instance_type: mac_mini_m2
    working_directory: flutter/flutter-android-and-ios-yaml-demo-project
    max_build_duration: 120
    environment:
      groups:
        - ios_creds
      vars:
        XCODE_WORKSPACE: "Runner.xcworkspace"
        XCODE_SCHEME: "Runner"
        BUNDLE_ID: "io.codemagic.cmflutteryaml"
        APP_STORE_APP_ID: "1571561263"
      flutter: stable
      xcode: 14.3
      cocoapods: default
    scripts:
      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
          keychain initialize
      - name: Fetch signing files
        script: |
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
      - name: Use system default keychain
        script: |
          keychain add-certificates
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Flutter analyze
        script: |
          flutter analyze
      - name: Flutter unit tests
        script: |
          flutter test
        ignore_failure: true
      - name: Install pods
        script: |
          find . -name "Podfile" -execdir pod install \;
      - name: Flutter build ipa and automatic versioning
        script: |
          flutter build ipa --release \
            --build-name=1.0.0 \
            --build-number=$(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1)) \
            --export-options-plist=/Users/builder/export_options.plist
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - user_1@example.com
        notify:
          success: true
          failure: false
      slack:
        channel: "#ce-builds"
        notify_on_build_start: true
        notify:
          success: true
          failure: false
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: false

  flutter-flavors-ios-dev:
    name: iOS Flutter Flavors Dev
    instance_type: mac_mini_m2
    max_build_duration: 120
    working_directory: flutter/flutter-flavors-demo-project
    environment:
      groups:
        - ios_creds
      vars:
        XCODE_WORKSPACE: "ios/Runner.xcworkspace"
        APP_STORE_APP_ID: "1589804869"
        XCODE_CONFIG: Release-dev
        XCODE_SCHEME: dev
        BUNDLE_ID: io.codemagic.flutterflavors.dev
        ENTRY_POINT: lib/main_dev.dart
      flutter: stable
      xcode: 14.3
      cocoapods: default
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "main"
          include: true
          source: true
    scripts:
      - name: Get Flutter Packages
        script: |
          flutter packages pub get
      - name: Pod install
        script: |
          find . -name "Podfile" -execdir pod install \;
      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
          keychain initialize
      - name: Fetch signing files
        script: |
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
      - name: Add certs to keychain
        script: |
          keychain add-certificates
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Flutter build ipa and automatic versioning
        script: |
          flutter build ipa --release \
            --build-name=1.0.0 \
            --build-number=$(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1)) \
            --export-options-plist=/Users/builder/export_options.plist \
            --flavor="$XCODE_SCHEME" \
            -t "$ENTRY_POINT"
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      email:
        recipients:
          - user_1@example.com
          - user_2@example.com
        notify:
          success: true
          failure: true
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID

  flutter-flavors-ios-prod:
    name: iOS Flutter Flavors Prod
    instance_type: mac_mini_m2
    max_build_duration: 120
    working_directory: flutter/flutter-flavors-demo-project
    environment:
      groups:
        - ios_creds
      vars:
        XCODE_WORKSPACE: "ios/Runner.xcworkspace"
        APP_STORE_APP_ID: "1589804841"
        XCODE_CONFIG: Release-prod
        XCODE_SCHEME: prod
        BUNDLE_ID: io.codemagic.flutterflavors.prod
        ENTRY_POINT: lib/main_prod.dart
      flutter: stable
      xcode: 14.3
      cocoapods: default
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "main"
          include: true
          source: true
    scripts:
      - name: Get Flutter Packages
        script: |
          flutter packages pub get
      - name: Pod install
        script: |
          find . -name "Podfile" -execdir pod install \;
      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
          keychain initialize
      - name: Fetch signing files
        script: |
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
      - name: Add certs to keychain
        script: |
          keychain add-certificates
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Flutter build ipa and automatic versioning
        script: |
          flutter build ipa --release \
            --build-name=1.0.0 \
            --build-number=$(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1)) \
            --export-options-plist=/Users/builder/export_options.plist \
            --flavor="$XCODE_SCHEME" \
            -t "$ENTRY_POINT"
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      email:
        recipients:
          - user_1@example.com
          - user_2@example.com
        notify:
          success: true
          failure: true
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID

  react-native-ios:
    name: React Native iOS
    max_build_duration: 120
    instance_type: mac_mini_m2
    working_directory: react-native/react-native-demo-project
    environment:
      groups:
        - ios_creds
      vars:
        XCODE_WORKSPACE: "ios/cmreactnative.xcworkspace"
        XCODE_SCHEME: "cmreactnative"
        BUNDLE_ID: "io.codemagic.cmreactnative"
        APP_STORE_APP_ID: "1571903173"
      node: "16.11.1"
      xcode: 14.3
      cocoapods: default
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: develop
          include: true
          source: true
    cache:
      cache_paths:
        - $HOME/Library/Caches/CocoaPods
    scripts:
      - name: Install dependencies
        script: |
          yarn install
      - name: Install CocoaPods dependencies
        script: |
          cd ios && pod install
      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
          keychain initialize
      - name: Fetch signing files
        script: |
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
      - name: Use system default keychain
        script: |
          keychain add-certificates
      - name: Increment build number
        script: |
          set -ex
          cd ios && agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Build ipa for distribution
        script: |
          cd ios && xcodebuild clean
          cd ios && xcodebuild -workspace "$XCODE_WORKSPACE" -scheme "$XCODE_SCHEME" -sdk iphoneos -configuration Release archive -archivePath build/$XCODE_SCHEME.xcarchive
          cd ios && xcodebuild -exportArchive -archivePath build/$XCODE_SCHEME.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath build/ipa
    artifacts:
      - ios/build/ipa/*.ipa
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      email:
        recipients:
          - user1@example.com
        notify:
          success: true
          failure: true
      slack:
        channel: "#ce-builds"
        notify_on_build_start: true
        notify:
          success: false
          failure: false
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID

unity-steam-deploy:
  name: Unity Steam Deploy
  instance_type: mac_mini_m2
  working_directory: unity/unity-steam-demo-project
  environment:
    vars:
      UNITY_LICENSE: $UNITY_LICENSE
  scripts:
    - name: Activate Unity license
      script: |
        unity-editor -quit -batchmode -nographics -logFile /dev/stdout -serial $UNITY_LICENSE
    - name: Build Steam deploy
      script: |
        unity-editor -quit -batchmode -nographics -projectPath . -executeMethod BuildScript.PerformBuild -logFile /dev/stdout
    - name: Upload artifacts
      script: |
        # Add your artifact upload commands here



  native-android:
    name: Native Android
    instance_type: linux_large
    working_directory: android/native-android-demo-project
    environment:
      vars:
        GRADLE_OPTS: "-Xmx2048m"
    scripts:
      - name: Install dependencies
        script: |
          ./gradlew dependencies
      - name: Run lint
        script: |
          ./gradlew lint
      - name: Run tests
        script: |
          ./gradlew test
      - name: Build APK
        script: |
          ./gradlew assembleRelease
    artifacts:
      - app/build/outputs/apk/release/*.apk
    publishing:
      email:
        recipients:
          - user1@example.com
        notify:
          success: true
          failure: true
